type Space 
@model
@auth(rules: [{ allow: owner, operations: [create, update, delete, read] }]) {
    id: ID!
    name: String!
    albums: [Album] @connection(keyName: "bySpace", fields: ["id"])
    contentTypes: [ContentType] @connection(keyName: "bySpace", fields: ["id"])
    locales: [Locale] @connection(keyName: "bySpace", fields: ["id"])
    entries: [Entry] @connection(keyName: "bySpace", fields: ["id"])
}

type ContentType
@model
@key(name: "bySpace", fields: ["spaceId"], queryField: "listContentTypesBySpace")
@auth(rules: [{allow: owner},{allow: private}]) {
    id: ID!
    spaceId: ID!
    space: Space @connection(fields: ["spaceId"])
    name: String!
    description: String
    displayField: String!
    sys: CtSys!
    fields: CtFields!
}

type Locale
@model
@key(name: "bySpace", fields: ["spaceId"], queryField: "listLocalesBySpace")
@auth(rules: [{allow: owner},{allow: private}]) {
    id: ID!
    spaceId: ID!
    space: Space @connection(fields: ["spaceId"])
    name: String!
    code: String!
    fallbackCode: String
    default: Boolean
    contentManagementApi: Boolean
    contentDeliveryApi: Boolean
    optional: Boolean
    sys: LocaleSys!
}

type Entry
@model
@key(name: "bySpace", fields: ["spaceId"], queryField: "listEntriesBySpace")
@key(name: "bySpaceContentType", fields: ["spaceId", "contentType"], queryField: "listEntriesBySpaceContentType")
@key(name: "bySpaceEntry", fields: ["spaceId", "entryId"], queryField: "listEntriesBySpaceEntry")
@auth(rules: [{allow: owner},{allow: private}]) {
    id: ID!
    spaceId: ID!
    space: Space @connection(fields: ["spaceId"])
    contentTypeId: ID!
    contentType: String!
    contentTypeModel: ContentType @connection(fields: ["contentTypeId"])
    entryId: String!
    sys: EntrySys!
    fields: String!
}

type Album 
@model 
@key(name: "bySpace", fields: ["spaceId"], queryField: "listAlbumsBySpace")
@auth(rules: [{ allow: owner, operations: [create, update, delete, read] }]) {
    id: ID!
    spaceId: ID!
    space: Space @connection(fields: ["spaceId"])
    name: String!
    description: String
    location: String
    photos: [Photo] @connection(keyName: "byAlbum", fields: ["id"])
}

type Photo 
@model 
@key(name: "byAlbum", fields: ["albumId"], queryField: "listPhotosByAlbum")
@auth(rules: [{allow: owner},{allow: private}]) {
    id: ID!
    albumId: ID!
    album: Album @connection(fields: ["albumId"])
    bucket: String!
    fullsize: PhotoS3Info!
    thumbnail: PhotoS3Info!
    location: String
}

type PhotoS3Info {
    key: String!
    width: Int!
    height: Int!
}

type SysLink {
    id: String!
    type: String!
    linkType: String!
}

type CtSys {
    space: SysLink!
    id: String!
    type: String!
    createdAt: String!
    updatedAt: String!
    environment: SysLink!
    publishedVersion: Int!
    publishedAt: String!
    firstPublishedAt: String!
    createdBy: SysLink!
    updatedBy: SysLink!
    publishedCounter: Int!
    version: Int!
    publishedBy: SysLink!
}

type CtFields {
    id: String!
    name: String!
    type: String!
    localized: Boolean
    required: Boolean
    validations: String
    disabled: Boolean
    omitted: Boolean
}

type LocaleSys {
    type: String!
    id: String!
    version: Int!
    space: SysLink!
    environment: SysLink!
    createdBy: SysLink!
    createdAt: String!
    updatedBy: SysLink!
    updatedAt: String!
}

type EntrySys {
    space: String!
    id: String!
    type: String!
    createdAt: String!
    updatedAt: String!
    environment: SysLink!
    publishedVersion: Int!
    publishedAt: String!
    firstPublishedAt: String!
    createdBy: SysLink!
    updatedBy: SysLink!
    publishedCounter: Int!
    version: Int!
    publishedBy: SysLink!
    contentType: SysLink!
}

input CreatePhotoInput {
    id: ID
    owner: String
    albumId: ID!
    bucket: String!
    fullsize: PhotoS3InfoInput!
    thumbnail: PhotoS3InfoInput!
    location: String
}

input PhotoS3InfoInput {
    key: String!
    width: Int!
    height: Int!
}